// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Ingredient {
  id              Int               @id @default(autoincrement())
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  name            String            @db.VarChar(255)
  kcal            Decimal           @db.Decimal(65, 2)
  protein         Decimal           @db.Decimal(65, 2)
  carbs           Decimal           @db.Decimal(65, 2)
  fat             Decimal           @db.Decimal(65, 2)
  user            User?@relation(fields:[userId], references:[id])
  userId          Int?
}

model Meal {
  id             Int               @id @default(autoincrement())
  created_at     DateTime          @default(now())
  updated_at     DateTime          @updatedAt
  name           String
  formValues     Json?
  user           User?@relation(fields:[userId], references:[id])
  userId         Int?
}

model Fineli_Ingredient {
  id              Int               @id @default(autoincrement())
  fineli_id       Int               @db.Int
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  name            String            @db.VarChar(255)
  kcal            Decimal           @db.Decimal(65, 2)
  protein         Decimal           @db.Decimal(65, 2)
  carbs           Decimal           @db.Decimal(65, 2)
  fat             Decimal           @db.Decimal(65, 2)
}

model User {
  id                    Int       @id @default(autoincrement())
  name                  String    @unique
  password              String
  created_at            DateTime  @default(now()) @map(name: "created_at")
  updated_at            DateTime  @updatedAt @map(name: "updated_at")
  meals                 Meal[]
  ingredients           Ingredient[]
  @@map(name: "user")
}